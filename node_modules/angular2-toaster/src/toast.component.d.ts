import { ViewContainerRef, EventEmitter, ComponentFactoryResolver, ChangeDetectorRef, OnInit, AfterViewInit } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { Toast } from './toast';
import { BodyOutputType } from './bodyOutputType';
import * as ɵngcc0 from '@angular/core';
export declare class ToastComponent implements OnInit, AfterViewInit {
    private sanitizer;
    private componentFactoryResolver;
    private changeDetectorRef;
    toast: Toast;
    iconClass: string;
    titleClass: string;
    messageClass: string;
    componentBody: ViewContainerRef;
    safeCloseHtml: SafeHtml;
    safeBodyHtml: SafeHtml;
    bodyOutputType: typeof BodyOutputType;
    clickEvent: EventEmitter<{}>;
    constructor(sanitizer: DomSanitizer, componentFactoryResolver: ComponentFactoryResolver, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    click(event: MouseEvent, toast: Toast): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastComponent, "[toastComp]", never, { "toast": "toast"; "iconClass": "iconClass"; "titleClass": "titleClass"; "messageClass": "messageClass"; }, { "clickEvent": "clickEvent"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRvYXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld0NvbnRhaW5lclJlZiwgRXZlbnRFbWl0dGVyLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIENoYW5nZURldGVjdG9yUmVmLCBPbkluaXQsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IFRvYXN0IH0gZnJvbSAnLi90b2FzdCc7XG5pbXBvcnQgeyBCb2R5T3V0cHV0VHlwZSB9IGZyb20gJy4vYm9keU91dHB1dFR5cGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9hc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgc2FuaXRpemVyO1xuICAgIHByaXZhdGUgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgdG9hc3Q6IFRvYXN0O1xuICAgIGljb25DbGFzczogc3RyaW5nO1xuICAgIHRpdGxlQ2xhc3M6IHN0cmluZztcbiAgICBtZXNzYWdlQ2xhc3M6IHN0cmluZztcbiAgICBjb21wb25lbnRCb2R5OiBWaWV3Q29udGFpbmVyUmVmO1xuICAgIHNhZmVDbG9zZUh0bWw6IFNhZmVIdG1sO1xuICAgIHNhZmVCb2R5SHRtbDogU2FmZUh0bWw7XG4gICAgYm9keU91dHB1dFR5cGU6IHR5cGVvZiBCb2R5T3V0cHV0VHlwZTtcbiAgICBjbGlja0V2ZW50OiBFdmVudEVtaXR0ZXI8e30+O1xuICAgIGNvbnN0cnVjdG9yKHNhbml0aXplcjogRG9tU2FuaXRpemVyLCBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIGNsaWNrKGV2ZW50OiBNb3VzZUV2ZW50LCB0b2FzdDogVG9hc3QpOiB2b2lkO1xufVxuIl19