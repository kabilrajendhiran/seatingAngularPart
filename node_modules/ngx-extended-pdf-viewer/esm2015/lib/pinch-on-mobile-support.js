/**
 * @fileoverview added by tsickle
 * Generated from: lib/pinch-on-mobile-support.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class PinchOnMobileSupport {
    /**
     * @param {?} _zone
     */
    constructor(_zone) {
        this._zone = _zone;
        this.startX = 0;
        this.startY = 0;
        this.initialPinchDistance = 0;
        this.pinchScale = 1;
        if (this.isMobile()) {
            this.initializePinchZoom();
        }
    }
    /**
     * @private
     * @return {?}
     */
    isMobile() {
        return 'ontouchstart' in document.documentElement;
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    onViewerTouchStart(event) {
        this.initialPinchDistance = 0;
        if (event.touches.length === 2) {
            /** @type {?} */
            const rect = this.container.getBoundingClientRect();
            // + this.container.scrollTop
            if (event.touches[0].pageX >= rect.left && event.touches[0].pageX <= rect.right) {
                if (event.touches[0].pageY >= rect.top /* && event.touches[0].pageY <= rect.bottom */) {
                    if (event.touches[1].pageX >= rect.left && event.touches[1].pageX <= rect.right) {
                        if (event.touches[1].pageY >= rect.top /* && event.touches[1].pageY <= rect.bottom  */) {
                            this.startX = (event.touches[0].pageX + event.touches[1].pageX) / 2;
                            this.startY = (event.touches[0].pageY + event.touches[1].pageY) / 2;
                            this.initialPinchDistance = Math.hypot(event.touches[1].pageX - event.touches[0].pageX, event.touches[1].pageY - event.touches[0].pageY);
                            event.preventDefault();
                            event.stopPropagation();
                        }
                    }
                }
            }
        }
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    onViewerTouchMove(event) {
        if (this.initialPinchDistance <= 0 || event.touches.length !== 2) {
            return;
        }
        if (this.pinchScale !== 1) {
            event.preventDefault();
        }
        /** @type {?} */
        const pinchDistance = Math.hypot(event.touches[1].pageX - event.touches[0].pageX, event.touches[1].pageY - event.touches[0].pageY);
        /** @type {?} */
        const originX = this.startX + this.container.scrollLeft;
        /** @type {?} */
        const originY = this.startY + this.container.scrollTop;
        this.pinchScale = pinchDistance / this.initialPinchDistance;
        this.viewer.style.transform = `scale(${this.pinchScale})`;
        this.viewer.style.transformOrigin = `${originX}px ${originY}px`;
        event.preventDefault();
        event.stopPropagation();
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    onViewerTouchEnd(event) {
        /** @type {?} */
        const PDFViewerApplication = ((/** @type {?} */ (window))).PDFViewerApplication;
        if (this.initialPinchDistance <= 0) {
            return;
        }
        this.viewer.style.transform = `none`;
        this.viewer.style.transformOrigin = `unset`;
        PDFViewerApplication.pdfViewer.currentScale *= this.pinchScale;
        /** @type {?} */
        const rect = this.container.getBoundingClientRect();
        /** @type {?} */
        const dx = this.startX - rect.left;
        /** @type {?} */
        const dy = this.startY - rect.top;
        this.container.scrollLeft += dx * (this.pinchScale - 1);
        this.container.scrollTop += dy * (this.pinchScale - 1);
        this.resetPinchZoomParams();
        event.preventDefault();
        event.stopPropagation();
    }
    /**
     * @private
     * @return {?}
     */
    resetPinchZoomParams() {
        this.startX = this.startY = this.initialPinchDistance = 0;
        this.pinchScale = 1;
    }
    /**
     * @return {?}
     */
    initializePinchZoom() {
        this.viewer = document.getElementById('viewer');
        this.container = (/** @type {?} */ (document.getElementById('viewerContainer')));
        this._zone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            document.addEventListener('touchstart', this.onViewerTouchStart.bind(this));
            document.addEventListener('touchmove', this.onViewerTouchMove.bind(this), { passive: false });
            document.addEventListener('touchend', this.onViewerTouchEnd.bind(this));
        }));
    }
    /**
     * @return {?}
     */
    destroyPinchZoom() {
        if (this.isMobile()) {
            document.removeEventListener('touchstart', this.onViewerTouchStart);
            document.removeEventListener('touchmove', this.onViewerTouchMove);
            document.removeEventListener('touchend', this.onViewerTouchEnd);
        }
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype.viewer;
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype.container;
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype.startX;
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype.startY;
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype.initialPinchDistance;
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype.pinchScale;
    /**
     * @type {?}
     * @private
     */
    PinchOnMobileSupport.prototype._zone;
}
//# sourceMappingURL=data:application/json;base64,